This is the Maude implementation of the SoftAgent Framework for specification of autonomous cyberphysical agents.  The basic framework
is extended with fault models and tools for detection and diagnosis.
It includes example case studies and diagnosis scenarios.

Directory structure
  Documentation  
  Lib     --- modules defining the framework 
  Models  --- specific SA models
    --- each model defines model specific knowledge, tasks, 
    --- actions, constraint solver, scenarios
    BotTeam   --- bots on a grid cooperating on a maintainence task
    Drones    --- surveillance task
    PatrolBot --- very simple example to explore ideas                 
  Runs --- output from experiments, generated by scripts 


The directory Documentation contains

overview.txt    --- a brief overview of Soft Agents
sadiagnosis.pdf --- a techreport describing the framework, 
                  --- fault models, 
                  --- detection and diagnosis algorithms and methods
                  --- three case studies
samodules.txt   --- a summary of the framework modules, sorts, functions
                --- and interface functions defined per model
runs-notes.txt  --- describes the Runs directories 
                   --- the scenarios and script input files 
script-notes.txt ---  describes the scripts used for partial automation
                 ---  of detection and diagnosis 
                 ---  (to generate files )


Using the framework

The scenario.maude file in each model directory contains definitions
of sample initial system configurations, including those used
in the experiments recorded in Runs directories.   
In the model directory you can carry out your own experiments.

% maude <loadfile> 

then 

red <initState>
rew [n] <initState>
search [n] <initState> =>+ <statePattern> 
search [n] <initState> =>+ <statePattern> such that <property>

You can  cd Runs/<caseStudy>

./run_all.sh

to repeat the experiments

or 

design your own experiments

OR

you can create your own model (in a new directory)
